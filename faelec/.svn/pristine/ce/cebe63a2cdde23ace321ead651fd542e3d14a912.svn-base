package com.tlm.faelec.web.controller;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import org.primefaces.component.datatable.DataTable;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;
import org.primefaces.event.SelectEvent;
import org.springframework.stereotype.Controller;

import com.tlm.faelec.listas.SeListas;
import com.tlm.faelec.service.trans.ITqdfqf00Service;
import com.tlm.faelec.utils.Constantes;
import com.tlm.faelec.utils.Utils;
import com.tlm.faelec.utils.UtilsJSF;
import com.tlm.faelec.web.controller.SeControlFactura.NombresListas;
import com.tlm.faelecEntities.model.entities.Mcampo00;
import com.tlm.faelecEntities.model.entities.Mdespr00;
import com.tlm.faelecEntities.model.entities.Tqdpqp00;
import com.tlm.faelecEntities.model.entities.Tqdfqf00;
import com.tlm.faelecEntities.model.entities.Tqigqg00;


@Controller
@ManagedBean
@SessionScoped
public class SeTqdfqf00  extends Control implements Serializable{
	
	private static final long serialVersionUID = 7213183176463668661L;
	
	@ManagedProperty(value = "#{tqdfqf00Service}")
	private ITqdfqf00Service tqdfqf00Service;
	
	@ManagedProperty(value = "#{seListas}") 
	private SeListas seListas;
	
	@ManagedProperty(value = "#{seTqigqg00}")
	private SeTqigqg00 seTqigqg00;
	
	
	private Tqigqg00 tqigqg00;
	
	private Tqdfqf00 tqdfqf00;
	private Tqdfqf00 tqdfqf00Clone;
	private List<Tqdfqf00> listTqdfqf00;
	private List<Tqdfqf00> filteredTqdfqf00;
	private boolean infoGuardada;
	
	private Tqdpqp00 tqdpqp00;
	private List<Tqdpqp00> filteredTqdpqp00;
	private List<Tqdpqp00> listTqdpqp00Remove;
	
	private Map<String, String> idiomasHm;
	private Map<String, String> idiomasAyuHm;
	private Map<String, String> permisos;
	private HashMap<String, String> idiomasTituloHm;
	private  HashMap<String, Mcampo00> permisoCampos;
	
	private String tabla;
	private String accion;
	private String titulo;
	private String paternDec_CantiM;
	private Integer fracDec_CantiM;
	
	private InputText inputTextIdmpqfColumn;
	private InputText inputTextIdmqqfColumn;
	//private InputText inputTextIdtfqfColumn;
	private InputText inputTextIdfcqfColumn;
	private String button;

	
	//Metodos del ManagedBean
	

	@PostConstruct
	public void init() {
		try {
			super.init("Tqdfqf00");
			tqdfqf00 = new Tqdfqf00();
			idiomasHm= super.getIdiomasHm();
			idiomasAyuHm= super.getIdiomasAyuHm();
			idiomasTituloHm = super.getIdiomasTituloHm();
			permisos = super.getPermisos();
			permisoCampos= super.getPermisoCampos();
			tabla=super.getTabla();
			accion=super.getSeControlFactura().getAccion();
			titulo=super.getSeControlFactura().getTitulo();
			
			Double d1=(Double)super.getSeControlFactura().PARAMETROS.get("Dec_CantiM");
			fracDec_CantiM=d1.intValue();
			paternDec_CantiM = calcularPatern(fracDec_CantiM.toString());
			//cargarDatos();
			reiniciarListasMaestro();
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(),FacesMessage.SEVERITY_ERROR);
		}
	}
	
	public void buttonAction(ActionEvent actionEvent) {
		this.setButton("OK");
		System.out.println("Setio buton en :" +button);
    }
	
	
	//Se reinician los valores por defecto de las listas de valores
	private void reiniciarListasMaestro(){
		try{
			 seListas.actualizarListas(NombresListas.listMcotes00); 
			 seListas.actualizarListas(NombresListas.listMgenusMedioPago); 
			 seListas.actualizarListas(NombresListas.listMgenusMoneda);
			 seListas.actualizarListas(NombresListas.listMgenteCliente);
			}catch (Exception e) {
			    e.printStackTrace();
			}		
	}
	
	public void accionNuevo() {
		try {
			setAccion(Constantes.ACCION_NUEVO);
			tqdfqf00 = new Tqdfqf00();
			tqdfqf00.setRegcqf(true);
			//tqdfqf00.setMconca00(seTqigqg00.getTqigqg00().getMconca00());
			tqdfqf00.setTqigqg00(seTqigqg00.getTqigqg00());
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(),FacesMessage.SEVERITY_ERROR);
		}
	}
	
	//public void cargarDatos() {
		//listTqdfqf00 = tqdfqf00Service.listTqdfqf00ByCriteria(new Tqdfqf00(), getSeControlFactura().getCompaniasUsu());
		
		//UtilsJSF.resetDTable("formTable:dTable");
	//}
	
	public void accionModificar(SelectEvent event){ 
		try {
			setAccion(Constantes.ACCION_MODIFICAR);//Modificar registro
			getSeControlFactura().setAccion(Constantes.ACCION_MODIFICAR);
			getSeControlFactura().setTitulo(titulo);
			getSeControlFactura().setTabla(tabla);
			
			if(tqdfqf00.getMgenus001() != null){
				actualizarListasCompania(tqdfqf00.getMgenus001().getCodius());
				getSeControlFactura().cargarParametros(true,null,tqdfqf00.getMgenus001().getIdtrus());
			}else{
				getSeControlFactura().cargarParametros(true,null,null);
				reiniciarListasMaestro();
			}
			
			if(validarListas()==true){
				//Se ejecuta el metodo para que no se pierda el objeto de las listas al momento de hacer un submit en el guardar
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(tqdfqf00.getMgenus001(), tqdfqf00.getMgenus001().getMtipre00().getTipore());
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(tqdfqf00.getMgenus002(), tqdfqf00.getMgenus002().getMtipre00().getTipore());
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(tqdfqf00.getMgente00(), tqdfqf00.getMgente00().getMtipre00().getTipore());
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(tqdfqf00.getMcotes00(), null);

			}
			
			tqdfqf00Clone = (Tqdfqf00) tqdfqf00.clone();
			infoGuardada = false;
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
		}
	}
	
	
	
	// metedo que captura el objeto al modificar y actualiza las listas de compañias 
	private void actualizarListasCompania (String codigoCompania){
		try{
			List<String> listMconca00ActualizarListas;
			listMconca00ActualizarListas = new ArrayList<String>();
			listMconca00ActualizarListas.add(codigoCompania);
			
			getSeListas().actualizarListasCompania(NombresListas.listMgenteCliente, listMconca00ActualizarListas);
			getSeListas().actualizarListasCompania(NombresListas.listMgenusMoneda, listMconca00ActualizarListas);
			getSeListas().actualizarListasCompania(NombresListas.listMgenusMedioPago , listMconca00ActualizarListas);
			getSeListas().actualizarListasCompania(NombresListas.listMcotes00, listMconca00ActualizarListas);
			
			RequestContext.getCurrentInstance().update("formTqdfqf00Detalle");
			}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public void autocompleteActualizarListas (){
		try{
			if(tqdfqf00.getMgenus001() != null){
			actualizarListasCompania(tqdfqf00.getMgenus001().getCodius());
			}else{
				reiniciarListasMaestro();
			}
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	private void colaEstandar() {
		try {
			tqdfqf00.setUsecqf(getSeControlFactura().codusu);
			tqdfqf00.setPrgcqf(getSeControlFactura().aplusu);
			tqdfqf00.setFeacqf(new Date());
			tqdfqf00.setMaqcqf(getSeControlFactura().ip);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	//metodo que valida la Unique Key en la lista Mcpcct00
	 private boolean validarUKTqdfqf00() throws Exception{
		  try{
			  getSeControlFactura().setTitulo(titulo);
			  getSeControlFactura().setTabla(tabla);
				  
			   if(!Utils.isEmptyOrNull(seTqigqg00.getTqigqg00().getTqdfqf00s())){
			    List<Tqdfqf00> listTemp = new ArrayList<Tqdfqf00>(seTqigqg00.getTqigqg00().getTqdfqf00s());
			    listTemp.remove(tqdfqf00);
			    
			    for (Tqdfqf00 objIter : listTemp) {
			     if(objIter.getTqigqg00().getNroqqg().equals(tqdfqf00.getTqigqg00().getNroqqg())   ){
			      return false;
			     }
			    }
			   }
		  } catch (Exception e) {
		   e.printStackTrace();
		  }
		  
		  return true;
		 }
		 
	//Limpia el filtro del DataTable
	public void clearAllFilters() {

		DataTable dataTable = (DataTable) FacesContext.getCurrentInstance()
				.getViewRoot()
				.findComponent("formDetalle:tabView:dTableTqdfqf00");
		if (!dataTable.getFilters().isEmpty()) {
			dataTable.reset();

			RequestContext requestContext = RequestContext.getCurrentInstance();
			requestContext.update("formDetalle:tabView:dTableTqdfqf00");
		}
	}
	
	private boolean validarDatosRequeridos(){
		boolean validacion = false;

		if(Utils.isEmptyOrNull(tqdfqf00.getMgenus001()) && permisoCampos.get("idmpqf").getReqcam().equals("S"))
		{
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idmpqf")+" "+getSeControlFactura().MENSAJES.get("Cam_Obliga"));
			inputTextIdmpqfColumn.setStyle("border-color: #d2524f;");				
		    RequestContext.getCurrentInstance().update(inputTextIdmpqfColumn.getClientId());
			validacion = true;
		}else{
			inputTextIdmpqfColumn.setStyle("border-color: #9a9a9a;");			 
			RequestContext.getCurrentInstance().update(inputTextIdmpqfColumn.getClientId());	
		}
		if(Utils.isEmptyOrNull(tqdfqf00.getMgenus002()) && permisoCampos.get("idmqqf").getReqcam().equals("S"))
		{
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idmqqf")+" "+getSeControlFactura().MENSAJES.get("Cam_Obliga"));
			inputTextIdmqqfColumn.setStyle("border-color: #d2524f;");				
		    RequestContext.getCurrentInstance().update(inputTextIdmqqfColumn.getClientId());
			validacion = true;
		}else{
			inputTextIdmqqfColumn.setStyle("border-color: #9a9a9a;");			 
			RequestContext.getCurrentInstance().update(inputTextIdmqqfColumn.getClientId());	
		}
		/*if(Utils.isEmptyOrNull(tqdfqf00.getMgente00()) && permisoCampos.get("idtfqf").getReqcam().equals("S"))
		{
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idtfqf")+" "+getSeControlFactura().MENSAJES.get("Cam_Obliga"));
			inputTextIdtfqfColumn.setStyle("border-color: #d2524f;");				
		    RequestContext.getCurrentInstance().update(inputTextIdtfqfColumn.getClientId());
			validacion = true;
		}else{
			inputTextIdtfqfColumn.setStyle("border-color: #9a9a9a;");			 
			RequestContext.getCurrentInstance().update(inputTextIdtfqfColumn.getClientId());	
		}*/
		if(Utils.isEmptyOrNull(tqdfqf00.getMcotes00()) && permisoCampos.get("idfcqf").getReqcam().equals("S"))
		{
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idfcqf")+" "+getSeControlFactura().MENSAJES.get("Cam_Obliga"));
			inputTextIdfcqfColumn.setStyle("border-color: #d2524f;");				
		    RequestContext.getCurrentInstance().update(inputTextIdfcqfColumn.getClientId());
			validacion = true;
		}else{
			inputTextIdfcqfColumn.setStyle("border-color: #9a9a9a;");			 
			RequestContext.getCurrentInstance().update(inputTextIdfcqfColumn.getClientId());	
		}
		
	
		
		return validacion;
	}
	
	private boolean validarListas(){
		boolean validacion = false;
		//Se valida que las listas que tiene el usuario en el formulario esten activas 
//		
		//Validacion lista  medio pago
		if(tqdfqf00.getMgenus001() != null &&  tqdfqf00.getMgenus001().getRegius()==false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idmpqf")+" "+ tqdfqf00.getMgenus001().getCodius() +" "+getSeControlFactura().MENSAJES.get("Cam_Deshab"));			
			validacion = true;
		}
		
		//Validacion lista  Moneda Cotizacion
		if(tqdfqf00.getMgenus002() != null &&  tqdfqf00.getMgenus002().getRegius()==false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idmqf")+" "+ tqdfqf00.getMgenus002().getCodius() +" "+getSeControlFactura().MENSAJES.get("Cam_Deshab"));			
			validacion = true;
		}
		
		//Validacion lista Cliente o Prospecto
		if(tqdfqf00.getMgente00() != null &&  tqdfqf00.getMgente00().getRegite()==false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idtfqf")+" "+ tqdfqf00.getMgente00().getCodite() +" "+getSeControlFactura().MENSAJES.get("Cam_Deshab"));			
			validacion = true;
		}
		
		//Validacion lista  Organización Ventas
		if(tqdfqf00.getMcotes00() != null &&  tqdfqf00.getMcotes00().isRegtes()==false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idfcqf")+" "+ tqdfqf00.getMcotes00().getCoctes() +" "+getSeControlFactura().MENSAJES.get("Cam_Deshab"));			
			validacion = true;
		}		
		return validacion;
	}
	
	
	public void save(ActionEvent event) {
		try {
			//Se validan los datos que son requeridos
			if (validarDatosRequeridos()) {
				return;
			}
			//tqdfqf00.setTqigqg00(tqigqg00.getIdtqqg());
			//if(tqdfqf00.getTqigqg00().equals(null)){
				//System.out.println("NULLO");
				//tqdfqf00.setTqigqg00(tqigqg00.getIdtqqg());
			//}
			
			colaEstandar();		
			if(validarUKTqdfqf00()){
				if(getAccion().equals(Constantes.ACCION_NUEVO))
				{
					seTqigqg00.getTqigqg00().getTqdfqf00s().add(tqdfqf00);	
				}
			}else{			
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(),"UNIQUE_KEY");				
				infoGuardada = false;			
				return;
			}
			infoGuardada = true;
			//cargarDatos();
		    UtilsJSF.closeDialog("dlgNuevoUpdateTqdfqf00");
		    UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_INFO);
		    RequestContext.getCurrentInstance().update("formDetalle:tabView:dTableTqdfqf00");
		}
	catch (Exception e) {	
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
			return;
		}
	}
	
	public void remove(ActionEvent event) {
		try {
			getSeControlFactura().setTitulo(titulo);
			getSeControlFactura().setTabla(tabla);
			tqdfqf00 = (Tqdfqf00) event.getComponent().getAttributes().get("tqdfqf00");
			tqdfqf00Service.removeTqdfqf00(tqdfqf00,getSeControlFactura().PARAMETROS.get("Reg_Audito").equals("S")?getSeControlFactura().crearAuditoria(Constantes.AUDIT_ELIMINAR,tqdfqf00.toString(),tqdfqf00.toStringId()):null);
			//cargarDatos();
			UtilsJSF.resetDTable(":formDetalle:tabView:dTableTqdfqf00");
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_INFO);
		} catch (Exception e) {
			if (UtilsJSF.isReferenceConstraintException(e)) {
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), "REFERENCE");
			} else {
				e.printStackTrace();
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
			}
		}
	}
	
	public void preRenderView(){
		try {
			getSeCabecera().setBotonNuevo(true);
			getSeCabecera().setBotonExcel(true);
			
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
		}
	}
	
	public void evtCloseDialog(CloseEvent event) {
		//Asigno los valores iniciales cuando la informacion no fue guardada
		if (getAccion().equals(Constantes.ACCION_MODIFICAR) && !infoGuardada){
			//Campos entidad Requeri
			tqdfqf00.setMgenus001(tqdfqf00Clone.getMgenus001());
			tqdfqf00.setMgenus002(tqdfqf00Clone.getMgenus002());
			tqdfqf00.setMgente00(tqdfqf00Clone.getMgente00());
			tqdfqf00.setMcotes00(tqdfqf00Clone.getMcotes00());

			RequestContext.getCurrentInstance().update("formDetalle:tabView:dTableTqdfqf00");
		}		
	}
	
	public ITqdfqf00Service getTqdfqf00Service() {
		return tqdfqf00Service;
	}
	public void setTqdfqf00Service(ITqdfqf00Service tqdfqf00Service) {
		this.tqdfqf00Service = tqdfqf00Service;
	}
	public SeListas getSeListas() {
		return seListas;
	}
	public void setSeListas(SeListas seListas) {
		this.seListas = seListas;
	}
	public SeTqigqg00 getSeTqigqg00() {
		return seTqigqg00;
	}
	public void setSeTqigqg00(SeTqigqg00 seTqigqg00) {
		this.seTqigqg00 = seTqigqg00;
	}
	public Tqdfqf00 getTqdfqf00() {
		return tqdfqf00;
	}
	public void setTqdfqf00(Tqdfqf00 tqdfqf00) {
		this.tqdfqf00 = tqdfqf00;
	}
	public Tqdfqf00 getTqdfqf00Clone() {
		return tqdfqf00Clone;
	}
	public void setTqdfqf00Clone(Tqdfqf00 tqdfqf00Clone) {
		this.tqdfqf00Clone = tqdfqf00Clone;
	}
	public List<Tqdfqf00> getListTqdfqf00() {
		return listTqdfqf00;
	}
	public void setListTqdfqf00(List<Tqdfqf00> listTqdfqf00) {
		this.listTqdfqf00 = listTqdfqf00;
	}
	public List<Tqdfqf00> getFilteredTqdfqf00() {
		return filteredTqdfqf00;
	}
	public void setFilteredTqdfqf00(List<Tqdfqf00> filteredTqdfqf00) {
		this.filteredTqdfqf00 = filteredTqdfqf00;
	}
	public boolean isInfoGuardada() {
		return infoGuardada;
	}
	public void setInfoGuardada(boolean infoGuardada) {
		this.infoGuardada = infoGuardada;
	}
	public Map<String, String> getIdiomasHm() {
		return idiomasHm;
	}
	public void setIdiomasHm(Map<String, String> idiomasHm) {
		this.idiomasHm = idiomasHm;
	}
	public Map<String, String> getIdiomasAyuHm() {
		return idiomasAyuHm;
	}
	public void setIdiomasAyuHm(Map<String, String> idiomasAyuHm) {
		this.idiomasAyuHm = idiomasAyuHm;
	}
	public Map<String, String> getPermisos() {
		return permisos;
	}
	public void setPermisos(Map<String, String> permisos) {
		this.permisos = permisos;
	}
	public HashMap<String, String> getIdiomasTituloHm() {
		return idiomasTituloHm;
	}
	public void setIdiomasTituloHm(HashMap<String, String> idiomasTituloHm) {
		this.idiomasTituloHm = idiomasTituloHm;
	}
	public HashMap<String, Mcampo00> getPermisoCampos() {
		return permisoCampos;
	}
	public void setPermisoCampos(HashMap<String, Mcampo00> permisoCampos) {
		this.permisoCampos = permisoCampos;
	}
	public String getTabla() {
		return tabla;
	}
	public void setTabla(String tabla) {
		this.tabla = tabla;
	}
	public String getAccion() {
		return accion;
	}
	public void setAccion(String accion) {
		this.accion = accion;
	}
	public String getTitulo() {
		return titulo;
	}
	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}


	public String getPaternDec_CantiM() {
		return paternDec_CantiM;
	}

	public void setPaternDec_CantiM(String paternDec_CantiM) {
		this.paternDec_CantiM = paternDec_CantiM;
	}
	public Integer getFracDec_CantiM() {
		return fracDec_CantiM;
	}


	public void setFracDec_CantiM(Integer fracDec_CantiM) {
		this.fracDec_CantiM = fracDec_CantiM;
	}


	public String getButton() {
		return button;
	}

	public void setButton(String button) {
		this.button = button;
	}

	public Tqdpqp00 getTqdpqp00() {
		if(tqdpqp00==null)
		{
			tqdpqp00= new Tqdpqp00();
		}
		return tqdpqp00;

	}

	public void setTqdpqp00(Tqdpqp00 tqdpqp00) {
		this.tqdpqp00 = tqdpqp00;
	}

	public List<Tqdpqp00> getFilteredTqdpqp00() {
		return filteredTqdpqp00;
	}

	public void setFilteredTqdpqp00(List<Tqdpqp00> filteredTqdpqp00) {
		this.filteredTqdpqp00 = filteredTqdpqp00;
	}

	public List<Tqdpqp00> getListTqdpqp00Remove() {
		return listTqdpqp00Remove;
	}

	public void setListTqdpqp00Remove(List<Tqdpqp00> listTqdpqp00Remove) {
		this.listTqdpqp00Remove = listTqdpqp00Remove;
	}

	public InputText getInputTextIdmpqfColumn() {
		return inputTextIdmpqfColumn;
	}

	public void setInputTextIdmpqfColumn(InputText inputTextIdmpqfColumn) {
		this.inputTextIdmpqfColumn = inputTextIdmpqfColumn;
	}

	public InputText getInputTextIdmqqfColumn() {
		return inputTextIdmqqfColumn;
	}

	public void setInputTextIdmqqfColumn(InputText inputTextIdmqqfColumn) {
		this.inputTextIdmqqfColumn = inputTextIdmqqfColumn;
	}

	public InputText getInputTextIdfcqfColumn() {
		return inputTextIdfcqfColumn;
	}

	public void setInputTextIdfcqfColumn(InputText inputTextIdfcqfColumn) {
		this.inputTextIdfcqfColumn = inputTextIdfcqfColumn;
	}

	public Tqigqg00 getTqigqg00() {
		return tqigqg00;
	}

	public void setTqigqg00(Tqigqg00 tqigqg00) {
		this.tqigqg00 = tqigqg00;
	}	

}
