package com.tlm.faelec.web.controller;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.application.FacesMessage;
import javax.faces.application.ViewHandler;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import javax.faces.component.UIComponent;
import javax.faces.component.UIViewRoot;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;
import org.primefaces.event.SelectEvent;

import org.springframework.stereotype.Controller;

import com.tlm.faelec.listas.SeListas;
import com.tlm.faelec.service.maestros.IMestad00Service;
import com.tlm.faelec.service.maestros.IMgencg00Service;
import com.tlm.faelec.utils.Constantes;
import com.tlm.faelec.utils.Utils;
import com.tlm.faelec.utils.UtilsJSF;
import com.tlm.faelecEntities.model.entities.Mestad00;
import com.tlm.faelecEntities.model.entities.Mgencg00;
import com.tlm.faelecEntities.model.entities.Mtipre00;



@Controller
@ManagedBean
@ViewScoped
public class SeMestad00 extends SeControlFactura implements Serializable {
	private static final long serialVersionUID = 1L;

	// variables del managed bean
	@ManagedProperty(value = "#{mestad00Service}")
	private IMestad00Service mestad00Service;
	
	@ManagedProperty(value = "#{mgencg00Service}")
	private IMgencg00Service mgencg00Service;
	
	@ManagedProperty(value="#{seCabecera}")
	private SeCabecera seCabecera;
	
	@ManagedProperty("#{seListas}")
	private SeListas seListas;
	
	private List<Mestad00> filteredMestad00;
	private List<Mestad00> listMestad00;
	private Mestad00 mestad00;
	private Mestad00 mestad00Cop;
	private boolean infoGuardada;
	private List<Mgencg00> listMgencg00;
	
	// Variables para el manejo de las listas de valores
	private String update;
	private String nombreTabla;
	private String nombreLista;
	private String nombreLista2;
	private Object objSeCall;
	
	//Metodos del managedBean
	@PostConstruct
	public void init() {
		try {
			super.init("MESTAD00");
			infoGuardada = false;
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
		}
	}
	
	public void cargarDatos() {	
		try {
			listMestad00 = mestad00Service.listMestad00ByCriteria(new Mestad00(),getCompaniasUsu() );
			//Cargamos la Base fecha alerta
			Mgencg00 mgencg00 = new Mgencg00();
			mgencg00.setMtipre00(new Mtipre00());
			mgencg00.setRegicg(true);
			mgencg00.getMtipre00().setTipore(Utils.paramsRb.getString("mgencg_codtcg_fechaalerta"));
			listMgencg00 = mgencg00Service.listMgencg00ByCriteria(mgencg00, getCompaniasUsu()); 
			UtilsJSF.resetDTable("formTable:dTable");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	//Se reinician los valores por defecto de las listas de valores
	private void reiniciarListasMaestro(){
		try {
			seListas.actualizarListas(NombresListas.listMconca);
			seListas.actualizarListas(NombresListas.listMtiptx00Mestad00);
			seListas.actualizarListas(NombresListas.listMacdio00);
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
	
	public void accionNuevo() {
		try {
			setAccion(Constantes.ACCION_NUEVO);
			mestad00 = new Mestad00();
			mestad00.setRegtes(true);
			reiniciarListasMaestro();
			infoGuardada = false;
		} catch (Exception e) {
			 e.printStackTrace();
			 UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
		}
	}
	
	public void accionModificar(SelectEvent event) { 
		try {
			setAccion(Constantes.ACCION_MODIFICAR);
			mestad00Cop=(Mestad00) mestad00.clone(); 
			//Se cargan los valores de las listas deacuerdo a la compañia que tenga el objeto
			if(mestad00.getMconca00() != null){
				actualizarListasCompania(mestad00.getMconca00().getCodcia());
			}else{
				reiniciarListasMaestro();
			}
			//Se valida si las listas del formulario tienen campos deshabilitados
			if(validarListas()==true){
				//Se ejecuta el metodo para que no se pierda el objeto de la lista al momento de hacer un submit en el guardar
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(mestad00.getMconca00(), null);
				UtilsJSF.tratamientoObjetoDeshabilitadoListas(mestad00.getMtiptx00(), null);				
			}		
			infoGuardada = false;
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
		}
	}
	
	// metedo que captura el objeto al modificar y actualiza las listas de compañias 
		public void actualizarListasCompania (String codigoCompania){
			try{
				List<String> listMconca00ActualizarListas;
				listMconca00ActualizarListas = new ArrayList<String>();
				listMconca00ActualizarListas.add(codigoCompania);
				seListas.actualizarListasCompania(NombresListas.listMconca, listMconca00ActualizarListas);
				seListas.actualizarListasCompania(NombresListas.listMtiptx00Mestad00, listMconca00ActualizarListas);
				seListas.actualizarListasCompania(NombresListas.listMacdio00, listMconca00ActualizarListas);
			}catch(Exception e){
				e.printStackTrace();
			}
		}
		
	//Actualiza las listas compañia desde el metodo autocompletar
		public void autocompleteActualizarListas (){
			try{
				if(mestad00.getMconca00() != null){
					actualizarListasCompania(mestad00.getMconca00().getCodcia());
				}else{
					reiniciarListasMaestro();
				}
				
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	
	//Se valida que las listas que tiene el usuario en el formulario esten activas 
	private boolean validarListas(){
		boolean validacion = false;
		
		//Validacion lista FK_MESTAD00_MCONCA00_IDCMES
		if(mestad00.getMconca00() != null && mestad00.getMconca00().getRegcia() == false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idcmes")+" "+mestad00.getMconca00().getCodcia()+" "+MENSAJES.get("Cam_Deshab"));
			validacion = true;
		}
		//Validacion lista FK_MESTAD00_MTIPTX00_IDTTES
		if(mestad00.getMtiptx00() != null && mestad00.getMtiptx00().isRegtxt() == false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idttes")+" "+mestad00.getMtiptx00().getCotrtx()+" "+MENSAJES.get("Cam_Deshab"));
			validacion = true;
		}
		//Validacion lista FK_MACDIO00
		if(mestad00.getMacdio00() != null && mestad00.getMacdio00().isRegdio() == false){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, 
		    getIdiomasHm().get("idaees")+" "+mestad00.getMacdio00().getDscdio()+" "+MENSAJES.get("Cam_Deshab"));
			validacion = true;
		}
		
		return validacion;
	}
	
	//Se validan los datos que son requeridos por BD o por Dinox
	private boolean validarDatosRequeridos(){
		boolean validacion = false;
		//Id tipo transacción 
		if(Utils.isEmptyOrNull(mestad00.getMtiptx00())){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR,getIdiomasHm().get("idttes")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Codigo estado
		if(Utils.isEmptyOrNull(mestad00.getCotres())){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR,getIdiomasHm().get("cotres")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Compañia
		if(Utils.isEmptyOrNull(mestad00.getMconca00()) && permisoCampos.get("idcmes").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idcmes")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Descripcion
		if(Utils.isEmptyOrNull(mestad00.getDscres()) && permisoCampos.get("dscres").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR,getIdiomasHm().get("dscres")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Estado
		if(Utils.isEmptyOrNull(mestad00.getMacdio00()) && permisoCampos.get("idaees").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("idaees")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Año Alerta
		if(Utils.isEmptyOrNull(mestad00.getAaales()) && permisoCampos.get("aaales").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("aaales")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Mes Alerta
		if(Utils.isEmptyOrNull(mestad00.getMmales()) && permisoCampos.get("mmales").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("mmales")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Dia Alerta
		if(Utils.isEmptyOrNull(mestad00.getDdales()) && permisoCampos.get("ddales").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("ddales")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Hora Alerta
		if(Utils.isEmptyOrNull(mestad00.getHhales()) && permisoCampos.get("hhales").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("hhales")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}
		//Base fecha Alerta
		if(Utils.isEmptyOrNull(mestad00.getBfeaes()) && permisoCampos.get("bfeaes").getReqcam().equals("S")){
			UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR, getIdiomasHm().get("bfeaes")+" "+MENSAJES.get("Cam_Obliga"));
			validacion = true;
		}

		return validacion;
	}
	
	public void save() {
		try {
			
			if(validarDatosRequeridos()){
				return;
			}
			
			colaEstandar();
			if(getAccion().equals(Constantes.ACCION_MODIFICAR))
			{
				if(validarListas()==false){
				mestad00Service.save(mestad00,PARAMETROS.get("Reg_Audito").equals("S")?super.crearAuditoria(null,mestad00.toString(),mestad00.toStringId(),mestad00Cop.toString()):null);
				}else return;
			}
			else
			{
			   mestad00Service.save(mestad00,PARAMETROS.get("Reg_Audito").equals("S")?super.crearAuditoria(null,mestad00.toString(),mestad00.toStringId(),null):null);
			}
			cargarDatos();
			seListas.actualizarListas(NombresListas.listMestad00);
			infoGuardada = true;
			UtilsJSF.closeDialog("dlgNuevoUpdate");			
		    UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_INFO);	
		    RequestContext.getCurrentInstance().update("formTable");
		} catch (Exception e) {
			if (UtilsJSF.isDuplicateException(e)) {
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), "UNIQUE_KEY");
				return;
			} else {
				e.printStackTrace();
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
				return;
			}
		}
	}
	
	public void remove(ActionEvent event) {
		try {
			mestad00 = (Mestad00) event.getComponent().getAttributes().get("mestad00");
			mestad00Service.removeMestad00(mestad00,PARAMETROS.get("Reg_Audito").equals("S")?super.crearAuditoria(Constantes.AUDIT_ELIMINAR,mestad00.toString(),mestad00.toString()):null);
			cargarDatos();
			seListas.actualizarListas(NombresListas.listMestad00);
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_INFO);
		} catch (Exception e) {
			if (UtilsJSF.isReferenceConstraintException(e)) {
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), "REFERENCE");
			} else {
				e.printStackTrace();
				UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
			}
		}
	}
		
	private void colaEstandar() {
		try {
			mestad00.setUsuaes(codusu);
			mestad00.setPrgres("Tipos Registro " + getClass().getName());
			mestad00.setFeaces(new Date());
			mestad00.setMaques(ip);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void preRenderView() {
		try {
			seCabecera.setBotonNuevo(true);
			seCabecera.setBotonExcel(true);

		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(),FacesMessage.SEVERITY_ERROR);
		}
	}
	
	public void evtCloseDialogMestad00(CloseEvent event) {
		try {
			 update=null;
			if (!Utils.isEmptyOrNull(getAccion()) && getAccion().equals(Constantes.ACCION_MODIFICAR) && infoGuardada==false){
	        	mestad00.setMconca00(mestad00Cop.getMconca00());
	        	mestad00.setMtiptx00(mestad00Cop.getMtiptx00());
	        	mestad00.setMacdio00(mestad00Cop.getMacdio00());
	        	}
			evtCloseDialog(event);
		} catch (Exception e) {
			e.printStackTrace();
			UtilsJSF.facesLog(FacesContext.getCurrentInstance(),FacesMessage.SEVERITY_ERROR);
		}
	}
	
	
	//Metodo que autocompleta todas las listas de Mconca00
		public List<Mestad00> completeMestad00(String query) {		

	        List<Mestad00> results = new ArrayList<Mestad00>();   
	        List<Mestad00> listMestad00 = seListas.getListMestad00();

	        for (Mestad00 obj : listMestad00) {        	
	        	if(obj.getDscres().toLowerCase().contains(query.toLowerCase())){
	        		results.add(obj);        		
	    		}			
			}
	        return results;
	    }
		
		public void llenarObjectCall(SelectEvent event) {

			try {
					if (objSeCall == null) {
						return;
					}
					String strClassLlama = objSeCall.getClass().getSimpleName();
					if (strClassLlama.equalsIgnoreCase("seMteste00")) {
						SeMteste00 seMteste00 = (SeMteste00) objSeCall;
						if (nombreTabla.equalsIgnoreCase("mestad00")) {
							if (nombreLista.equalsIgnoreCase("estadoOrigen")) {
								seMteste00.getMteste00Detalles().setMestad001((Mestad00) event.getObject());								
								RequestContext.getCurrentInstance().update(update);
							}else if (nombreLista.equalsIgnoreCase("estadoDestino")) {
								seMteste00.getMteste00Detalles().setMestad002((Mestad00) event.getObject());							
								RequestContext.getCurrentInstance().update(update);
							}
						}
					}
				} catch (Exception e) {
					e.printStackTrace();
					UtilsJSF.facesLog(FacesContext.getCurrentInstance(), FacesMessage.SEVERITY_ERROR);
				}
	
				update=null;
			}
		
//		public void llenarObjectCall2(SelectEvent event)
//		{
//			try {
//				System.out.println("Prueba...........2");
//				
//			} catch (Exception e) {
//				e.printStackTrace();
//			}
//		}
	
	public void validarEstadoIncial() {
		try {
			if (getAccion().equalsIgnoreCase(Constantes.ACCION_MODIFICAR) && mestad00.getMconca00()!= null && mestad00.getMtiptx00()!=null) {
				for (Mestad00 mestad : listMestad00) {
					if (mestad.getMtiptx00().getIdtptx().equals(mestad00.getMtiptx00().getIdtptx())
						&& mestad.getMconca00().getIdccia().equals(mestad00.getMconca00().getIdccia())
						&& mestad.getInines() == true && !mestad.getCotres().equalsIgnoreCase(mestad00.getCotres())) {
						UtilsJSF.facesLog( FacesMessage.SEVERITY_ERROR, MENSAJES.get("Es_Inicial") + " " + mestad.getCotres());
						mestad00.setInines(false);
					}
				}
			} else if(getAccion().equalsIgnoreCase(Constantes.ACCION_NUEVO) && mestad00.getMconca00()!= null && mestad00.getMtiptx00()!=null){
				for (Mestad00 mestad : listMestad00) {
					if (mestad.getMtiptx00().getIdtptx().equals(mestad00.getMtiptx00().getIdtptx())
							&& mestad.getMconca00().getIdccia() .equals(mestad00.getMconca00().getIdccia())
							&& mestad.getInines() == true) {
						UtilsJSF.facesLog(FacesMessage.SEVERITY_ERROR,MENSAJES.get("Es_Inicial") + " " + mestad.getCotres());
						mestad00.setInines(false);
					}
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/*
	 * Getters and Setters
	 */

	public IMestad00Service getMestad00Service() {
		return mestad00Service;
	}

	public void setMestad00Service(IMestad00Service mestad00Service) {
		this.mestad00Service = mestad00Service;
	}

	public SeCabecera getSeCabecera() {
		return seCabecera;
	}

	public void setSeCabecera(SeCabecera seCabecera) {
		this.seCabecera = seCabecera;
	}

	public List<Mestad00> getFilteredMestad00() {
		return filteredMestad00;
	}

	public void setFilteredMestad00(List<Mestad00> filteredMestad00) {
		this.filteredMestad00 = filteredMestad00;
	}

	public List<Mestad00> getListMestad00() {
		return listMestad00;
	}

	public void setListMestad00(List<Mestad00> listMestad00) {
		this.listMestad00 = listMestad00;
	}

	public Mestad00 getMestad00() {
		return mestad00;
	}

	public void setMestad00(Mestad00 mestad00) {
		this.mestad00 = mestad00;
	}

	public Mestad00 getMestad00Cop() {
		return mestad00Cop;
	}

	public void setMestad00Cop(Mestad00 mestad00Cop) {
		this.mestad00Cop = mestad00Cop;
	}

	public boolean isInfoGuardada() {
		return infoGuardada;
	}

	public void setInfoGuardada(boolean infoGuardada) {
		this.infoGuardada = infoGuardada;
	}

	public SeListas getSeListas() {
		return seListas;
	}

	public void setSeListas(SeListas seListas) {
		this.seListas = seListas;
	}

	public String getUpdate() {
		return update;
	}

	public void setUpdate(String update) {
		this.update = update;
	}

	public String getNombreTabla() {
		return nombreTabla;
	}

	public void setNombreTabla(String nombreTabla) {
		this.nombreTabla = nombreTabla;
	}

	public String getNombreLista() {
		return nombreLista;
	}

	public void setNombreLista(String nombreLista) {
		this.nombreLista = nombreLista;
	}

	public Object getObjSeCall() {
		return objSeCall;
	}

	public void setObjSeCall(Object objSeCall) {
		this.objSeCall = objSeCall;
	}

	
	public IMgencg00Service getMgencg00Service() {
		return mgencg00Service;
	}

	public void setMgencg00Service(IMgencg00Service mgencg00Service) {
		this.mgencg00Service = mgencg00Service;
	}

	public List<Mgencg00> getListMgencg00() {
		return listMgencg00;
	}

	public void setListMgencg00(List<Mgencg00> listMgencg00) {
		this.listMgencg00 = listMgencg00;
	}

	public String getNombreLista2() {
		return nombreLista2;
	}

	public void setNombreLista2(String nombreLista2) {
		this.nombreLista2 = nombreLista2;
	}

}